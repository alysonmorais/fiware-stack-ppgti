services:
# MONGODB
  mongo-db-fiware:
    image: mongo:4.4
    hostname: mongo-db-fiware
    container_name: mongo-db-fiware
    volumes:
      - ~/volumes-docker/mongo-db-fiware:/data

# ORION CONTEXT BROKER
  orion:
    image: fiware/orion
    hostname: fiware-orion
    container_name: fiware-orion
    depends_on:
      - mongo-db-fiware
    command: -dbURI mongodb://mongo-db-fiware:27017 -logLevel DEBUG

# CYGNUS 
  cygnus:
    image: fiware/cygnus-ngsi:2.6.0
    container_name: cygnus
    depends_on:
      - postgres
    environment:
      - CYGNUS_POSTGRESQL_HOST=postgres
      - CYGNUS_POSTGRESQL_PORT=5432
      - CYGNUS_POSTGRESQL_USER=cygnus
      - CYGNUS_POSTGRESQL_PASS=cygnus
      - CYGNUS_POSTGRESQL_DB=cygnus
      - CYGNUS_SERVICE_PORT=5050
      - CYGNUS_API_PORT=5080

# POSTGRESQL
  postgres:
    image: postgres:14
    container_name: postgres
    environment:
      - POSTGRES_USER=cygnus
      - POSTGRES_PASSWORD=cygnus
      - POSTGRES_DB=cygnus
    volumes:
      - ~/volumes-docker/postgres_data:/var/lib/postgresql/data

# NGINX        
  nginx:
     restart: always
     image: nginx
     ports:
      - "80:80"
      - "443:443"
     volumes:
      - ~/volumes-docker/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ~/volumes-docker/nginx/certificate/nginx-certificate.crt:/etc/nginx/certificate/nginx-certificate.crt:ro
      - ~/volumes-docker/nginx/certificate/nginx.key:/etc/nginx/certificate/nginx.key:ro

# GRAFANA
  grafana:
     image: grafana/grafana
     container_name: grafana
     restart: unless-stopped
     environment:
      - GF_SERVER_ROOT_URL=http://my.grafana.server/
      - GF_PLUGINS_PREINSTALL=grafana-clock-panel
      - GF_PLUGINS_ALLOW_LOADING_UNSIGNED_PLUGINS=meln5674-mongodb-community
     ports:
      - '3000:3000'
     user: '0'
     volumes:
      - ~/volumes-docker/grafana_storage:/var/lib/grafana

# IoT Agent JSON
  iot-agent:
    image: fiware/iotagent-json
    container_name: iot-agent-json
    restart: always
    depends_on:
      - mongo-db-fiware
      - orion
    environment:
      IOTA_CB_HOST: orion
      IOTA_CB_PORT: 1026
      IOTA_NORTH_PORT: 4041
      IOTA_REGISTRY_TYPE: mongodb
      IOTA_LOG_LEVEL: DEBUG
      IOTA_TIMESTAMP: true
      IOTA_CB_NGSI_VERSION: v2
      IOTA_MONGO_HOST: mongo-db-fiware

# STH-COMET (Short Term History) - CONFIGURAÇÃO CORRIGIDA
  sth-comet:
    image: fiware/sth-comet
    hostname: sth-comet
    container_name: fiware-sth-comet
    depends_on:
      - mongo-db-fiware
    ports:
      - "8666:8666"  # Expondo a porta para debug
    environment:
      - STH_HOST=0.0.0.0
      - STH_PORT=8666
      - DB_PREFIX=sth_
      - DB_URI=mongo-db-fiware:27017
      - LOGOPS_LEVEL=DEBUG
      # Configurações corrigidas
      - DEFAULT_SERVICE=meuservico
      - DEFAULT_SERVICE_PATH=/sensores
      - COLLECTION_PREFIX=sth_
      - DATA_MODEL=collection-per-service-path
      - IGNORE_BLANK_SPACES=true
      - POOL_SIZE=5
      # Configurações adicionais importantes
      - STH_COLLECTION_SIZE=10
      - STH_DB_NAME_ENCODING=false
      # Configurações de timeout para evitar MongoError
      - DB_TIMEOUT=10000
      - DB_POOL_SIZE=5
    restart: unless-stopped
    networks:
      - default

# CrateDB
  crate:
    image: crate/crate:latest
    container_name: crate
    command: ["crate", "-Cdiscovery.type=single-node", "-Ccluster.name=docker-cluster", "-Cgateway.expected_nodes=1", "-Cgateway.recover_after_nodes=1"] # Comando mais robusto para single-node
    environment:
      - CRATE_HEAP_SIZE=1g
    volumes:
      - ~/volumes-docker/crate_data:/data
    restart: unless-stopped

# Quantum Leap
  quantumleap:
    image: orchestracities/quantumleap:latest
    container_name: quantumleap
    depends_on:
      - crate
      - orion
    environment:
      - CRATE_HOST=crate
      - QL_CRATE_HOST=crate
      - CRATE_PORT=4200
      - QL_DB_NAME=doc
      - USE_GEOCODING=False
      - LOGLEVEL=INFO
    restart: unless-stopped

  node-exporter:
    image: prom/node-exporter
    container_name: node-exporter
    restart: unless-stopped
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - '--path.rootfs=/rootfs'

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:v0.47.2
    container_name: cadvisor
    restart: unless-stopped
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    restart: unless-stopped
    volumes:
      - ~/volumes-docker/prometheus.yml:/etc/prometheus/prometheus.yml

# KEYCLOAK
#  keycloak:
#    image: quay.io/keycloak/keycloak
#    environment:
#      - KEYCLOAK_ADMIN=admin
#      - KEYCLOAK_ADMIN_PASSWORD=admin123
#      - KC_DB=dev-file
#    command: start-dev

networks:
  default:
    labels:
      org.fiware: 'fiware'
volumes:
  nginx:
  mongo-db-fiware:
  grafana_storage:
  crate_data:
  postgres_data:
  prometheus.yml:
